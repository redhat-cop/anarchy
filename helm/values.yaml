---
communeOperator:
  deploy: false
  namespace:
    create: true
    name: anarchy-commune-operator
  resources:
    limits:
      cpu: "1"
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

image:
  repository: quay.io/redhat-cop/anarchy
  pullPolicy: IfNotPresent

# Deploy Anarchy, as opposed to only defining the CRDs and ClusterRoles
deploy: true

envVars:
  CLEANUP_INTERVAL: 300

namespace:
  create: true
  name: anarchy

# Control creation of cluster roles
clusterroles:
  create: false

# Just for odo usage, separate control for role creation, roles also
# created when deploy is set to true
roles:
  create: false

imagePullSecrets: []
nameOverride: ""

# Number of Anarchy replicas for deployment
apiReplicaCount: 1
replicaCount: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the name template
  name:

service:
  type: ClusterIP
  port:
    api: 5000

ingress:
  enabled: false
  kind: Ingress
  annotations: {}
  hosts:
  - host: anarchy.apps.example.com
    paths: []
  tls:
  - secretName: anarchy-tls
    hosts:
    - anarchy.apps.example.com

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

runners:
  default:
    resources:
      consecutiveFailureLimit: 10
      maxReplicas: 10
      minReplicas: 1
      limits:
        cpu: "1"
        memory: 256Mi
      requests:
        cpu: 500m
        memory: 256Mi
      runLimit: 100
      scaleUpDelay: 5m
      scaleUpThreshold: 20
      scalingCheckInterval: 1m
