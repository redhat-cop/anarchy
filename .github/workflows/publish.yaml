---
name: publish
on:
  push:
    branches-ignore:
    - '*'
    tags:
    - 'v[0-9]*'
jobs:
  publish:
    env:
      IMAGE_NAME: anarchy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Set image tags
      id: image_tags
      run: |
        # Version is a semantic version tag or semantic version with release number
        # GITHUB_REF will be of the form "refs/tags/v0.1.2" or "refs/tags/v0.1.2-1"
        # To determine RELEASE, strip off the leading "refs/tags/"
        RELEASE=${GITHUB_REF#refs/tags/}
        # To determine VERSION, strip off any release number suffix
        VERSION=${RELEASE/-*/}
        echo "::set-output name=RELEASE::${RELEASE}"
        echo "::set-output name=VERSION::${VERSION}"

        # Only build image if version tag without release number
        # Releases indicate a change in the repository that should not trigger a new build.
        if [[ "${VERSION}" == "${RELEASE}" ]]; then
          # Publish to latest, minor, and patch tags
          # Ex: latest,v0.1.2,v0.1
          IMAGE_TAGS=(
            '${{ secrets.REGISTRY_URI }}/${{ secrets.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest'
            "${{ secrets.REGISTRY_URI }}/${{ secrets.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}:${VERSION%.*}"
            "${{ secrets.REGISTRY_URI }}/${{ secrets.REGISTRY_REPOSITORY }}/${{ env.IMAGE_NAME }}:${VERSION}"
          )
          # Set IMAGE_TAGS output for use in next step
          ( IFS=$','; echo "::set-output name=IMAGE_TAGS::${IMAGE_TAGS[*]}" )
        fi

        # Read version from helm/Chart.yaml
        HELM_CHART_VERSION=$(sed -nr 's/^appVersion: (.*)/\1/p' helm/Chart.yaml)
        if [[ "v${HELM_CHART_VERSION}" != "${VERSION}" ]]; then
          echo "Helm chart version does not match tag!"
          exit 1
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      if: steps.image_tags.outputs.IMAGE_TAGS

    - name: Login to Image Registry
      uses: docker/login-action@v1
      if: steps.image_tags.outputs.IMAGE_TAGS
      with:
        registry: ${{ secrets.REGISTRY_URI }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and publish image to Quay
      uses: docker/build-push-action@v2
      if: steps.image_tags.outputs.IMAGE_TAGS
      with:
        file: Dockerfile
        push: true
        tags: ${{ steps.image_tags.outputs.IMAGE_TAGS }}
  publish-helm-charts:
    needs: publish
    env:
      IMAGE_NAME: anarchy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Checkout gh-pages
      uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: gh-pages

    - name: Configure Helm
      uses: azure/setup-helm@v1
      with:
        version: latest

    - name: Package Helm Chart
      run: |
        helm dep up helm/
        helm package helm/
        mv ${{ env.IMAGE_NAME }}-*.tgz gh-pages
        helm repo index --url https://redhat-cop.github.io/${{ env.IMAGE_NAME }} gh-pages

    - name: Push Changes to GH Pages
      run: |
        cd gh-pages
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git add .
        git commit -m "Updating Helm Chart Repository"
        git push
