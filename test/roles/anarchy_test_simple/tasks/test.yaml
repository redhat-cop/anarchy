---
- include_tasks: test-00.yaml
- include_tasks: test-01.yaml
- include_tasks: test-02.yaml
- include_tasks: test-03.yaml
- include_tasks: test-04.yaml
- include_tasks: test-05.yaml
- include_tasks: test-06.yaml
- include_tasks: test-07.yaml
- include_tasks: test-08.yaml
- include_tasks: test-09.yaml
- include_tasks: test-10.yaml

## OLD TESTS FOLLOW
- name: Create AnarchySubject test-simple-1
  kubernetes.core.k8s:
    apply: true
    state: present
    definition: "{{ lookup('template', 'subject.yaml.j2') | from_yaml }}"
  vars:
    _name: test-simple-1
    _a_var_from_subject: 23

- name: Get AnarchySubject test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1
  register: r_get_test_simple_1
  failed_when: r_get_test_simple_1.resources | default([]) | length != 1

- name: Get AnarchyRun for create test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/event=create
    - anarchy.gpte.redhat.com/runner=successful
    - anarchy.gpte.redhat.com/subject=test-simple-1
  register: r_get_test_simple_1_create_run
  failed_when: r_get_test_simple_1_create_run.resources | default([]) | length != 1
  until: r_get_test_simple_1_create_run is success
  retries: 15
  delay: 5

- name: Validate AnarchyRun for create test-simple-1
  assert:
    that:
    - _run.metadata.ownerReferences == _expected_owner_references
    - _run.spec.subject.vars == _expected_vars
  vars:
    _run: "{{ r_get_test_simple_1_create_run.resources[0] }}"
    _subject: "{{ r_get_test_simple_1.resources[0] }}"
    _expected_owner_references:
    - apiVersion: anarchy.gpte.redhat.com/v1
      controller: true
      kind: AnarchySubject
      name: test-simple-1
      uid: "{{ _subject.metadata.uid }}"
    _expected_vars:
      a_var_from_subject: 23
      a_var_subject_should_override: true

- name: Get AnarchyAction scheduled by AnarchyRun for create of test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: "{{ _action.metadata.name }}"
  vars:
    _run: >-
      {{ r_get_test_simple_1_create_run.resources[0] }}
    _action: >-
      {{ _run | json_query(_action_json_query) }}
    _action_json_query: >-
      status.result.ansibleRun.plays[0].tasks[?action=='anarchy_schedule_action'].hosts.localhost.result.action|[0]
  register: r_get_test_simple_1_configure_action
  failed_when: r_get_test_simple_1_configure_action.resources | length != 1
  until: r_get_test_simple_1_configure_action is success
  retries: 10
  delay: 5

- name: Get AnarchyRun for configure test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/runner=successful
    - anarchy.gpte.redhat.com/subject=test-simple-1
    - anarchy.gpte.redhat.com/action={{ _action.metadata.name }}
  vars:
    _action: "{{ r_get_test_simple_1_configure_action.resources[0] }}"
  register: r_get_test_simple_1_configure_run
  failed_when: r_get_test_simple_1_configure_run.resources | default([]) | length != 1
  until: r_get_test_simple_1_configure_run is success
  retries: 10
  delay: 5

- name: Validate AnarchyRun for configure test-simple-1 after create
  assert:
    that:
    - _run.metadata.ownerReferences == _expected_owner_references
    fail_msg: |
      AnarchyRun {{ _run.metadata.name }} not defined as expected:

      {{ _run | to_nice_yaml }}

      Expected metadata.ownerReferences:

      {{ _expected_owner_references | to_nice_yaml }}
  vars:
    _action: "{{ r_get_test_simple_1_configure_action.resources[0] }}"
    _run: "{{ r_get_test_simple_1_configure_run.resources[0] }}"
    _expected_owner_references:
    - apiVersion: anarchy.gpte.redhat.com/v1
      controller: true
      kind: AnarchyAction
      name: "{{ _action.metadata.name }}"
      uid: "{{ _action.metadata.uid }}"

- name: Update AnarchySubject test-simple-1
  kubernetes.core.k8s:
    apply: true
    state: present
    definition: "{{ lookup('template', 'subject.yaml.j2') | from_yaml }}"
  vars:
    _name: test-simple-1
    _a_var_from_subject: 42

- name: Get AnarchyRun for update test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/event=update
    - anarchy.gpte.redhat.com/runner=successful
    - anarchy.gpte.redhat.com/subject=test-simple-1
  register: r_get_test_simple_1_update_run
  failed_when: r_get_test_simple_1_update_run.resources | default([]) | length != 1
  until: r_get_test_simple_1_update_run is success
  retries: 10
  delay: 5

- name: Validate AnarchyRun for update test-simple-1
  assert:
    that:
    - _run.metadata.ownerReferences == _expected_owner_references
  vars:
    _run: "{{ r_get_test_simple_1_update_run.resources[0] }}"
    _subject: "{{ r_get_test_simple_1.resources[0] }}"
    _expected_owner_references:
    - apiVersion: anarchy.gpte.redhat.com/v1
      controller: true
      kind: AnarchySubject
      name: test-simple-1
      uid: "{{ _subject.metadata.uid }}"

- name: Get AnarchyAction scheduled by AnarchyRun for update of test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: "{{ _action.metadata.name }}"
  vars:
    _run: >-
      {{ r_get_test_simple_1_update_run.resources[0] }}
    _action: >-
      {{ _run | json_query(_action_json_query) }}
    _action_json_query: >-
      status.result.ansibleRun.plays[0].tasks[?action=='anarchy_schedule_action'].hosts.localhost.result.action|[0]
  register: r_get_test_simple_1_configure_action
  failed_when: r_get_test_simple_1_configure_action.resources | length != 1
  until: r_get_test_simple_1_configure_action is success
  retries: 10
  delay: 5

- name: Get AnarchyRun for configure test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/runner=successful
    - anarchy.gpte.redhat.com/subject=test-simple-1
    - anarchy.gpte.redhat.com/action={{ _action.metadata.name }}
  vars:
    _action: "{{ r_get_test_simple_1_configure_action.resources[0] }}"
  register: r_get_test_simple_1_configure_run
  failed_when: r_get_test_simple_1_configure_run.resources | default([]) | length != 1
  until: r_get_test_simple_1_configure_run is success
  retries: 10
  delay: 5

- name: Validate AnarchyRun for configure test-simple-1 after update
  assert:
    that:
    - _run.metadata.ownerReferences == _expected_owner_references
  vars:
    _action: "{{ r_get_test_simple_1_configure_action.resources[0] }}"
    _run: "{{ r_get_test_simple_1_configure_run.resources[0] }}"
    _expected_owner_references:
    - apiVersion: anarchy.gpte.redhat.com/v1
      controller: true
      kind: AnarchyAction
      name: "{{ _action.metadata.name }}"
      uid: "{{ _action.metadata.uid }}"

- name: Create AnarchyAction without ownerReferences
  kubernetes.core.k8s:
    apply: true
    state: present
    definition:
      apiVersion: anarchy.gpte.redhat.com/v1
      kind: AnarchyAction
      metadata:
        name: test-simple-1-set-owner-ref
        namespace:  "{{ anarchy_namespace }}"
      spec:
        action: configure
        subjectRef:
          name: test-simple-1

- name: Verify AnarchyAction Without ownerReferences is set
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-set-owner-ref
  register: r_get_test_simple_configure_action
  vars:
    _action: "{{ r_get_test_simple_configure_action.resources[0] }}"
  failed_when: >-
    r_get_test_simple_configure_action.resources | default([]) | length != 1 or
    _action.metadata.ownerReferences | default([]) | length != 1
  until: r_get_test_simple_configure_action is success
  retries: 10
  delay: 5

- name: Validate References for test-simple-1-set-owner-ref
  assert:
    that:
    - _action.metadata.labels['anarchy.gpte.redhat.com/action'] == 'configure'
    - _action.metadata.labels['anarchy.gpte.redhat.com/governor'] == 'test-simple'
    - _action.metadata.labels['anarchy.gpte.redhat.com/subject'] == 'test-simple-1'
    - _action.spec.governorRef.name == 'test-simple'
    - _action.spec.governorRef.namespace == anarchy_namespace
    - _action.spec.subjectRef.namespace == anarchy_namespace
  vars:
    _action: "{{ r_get_test_simple_configure_action.resources[0] }}"

- name: Create AnarchyAction to test scheduling
  kubernetes.core.k8s:
    apply: true
    state: present
    definition:
      apiVersion: anarchy.gpte.redhat.com/v1
      kind: AnarchyAction
      metadata:
        name: test-simple-1-future-execution
        namespace:  "{{ anarchy_namespace }}"
      spec:
        action: configure
        after: "{{ '10s' | anarchy_after_timestamp }}"
        subjectRef:
          name: test-simple-1

- name: Pause for AnarchyAction initial handling
  pause:
    seconds: 5

- name: Get AnarchyAction test-simple-1-future-execution before run
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-future-execution
  register: r_get_action
  vars:
    _action: "{{ r_get_action.resources[0] }}"
  failed_when: >-
    'ownerReferences' not in _action.metadata | default({}) or
    'runRef' in _action.status | default({})
  until: r_get_action is success
  retries: 10
  delay: 5

- name: Wait for AnarchyAction test-simple-1-future-execution run
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-future-execution
  register: r_get_action
  vars:
    _action: "{{ r_get_action.resources[0] }}"
  failed_when: >-
    'runRef' not in _action.status | default({})
  until: r_get_action is success
  retries: 20
  delay: 5

- name: Check AnarchyRun for test-simple-1-future-execution
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    name: "{{ _run_ref.name }}"
  register: r_get_run
  vars:
    _action: "{{ r_get_action.resources[0] }}"
    _run_ref: "{{ _action.status.runRef }}"
    _run: "{{ r_get_run.resources[0] }}"
  failed_when: >-
    _run.status.result.status | default('') != 'successful'
  until: r_get_run is success
  retries: 10
  delay: 5

- name: Create AnarchyAction to test failure recovery
  kubernetes.core.k8s:
    apply: true
    state: present
    definition:
      apiVersion: anarchy.gpte.redhat.com/v1
      kind: AnarchyAction
      metadata:
        name: test-simple-1-fail-first-run
        namespace:  "{{ anarchy_namespace }}"
      spec:
        action: configure
        subjectRef:
          name: test-simple-1
        vars:
          fail_first_run: true

- name: Get AnarchyAction test-simple-1-fail-first-run
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-fail-first-run
  register: r_get_action
  vars:
    _action: "{{ r_get_action.resources[0] }}"
  failed_when: >-
    'runRef' not in _action.status | default({})
  until: r_get_action is success
  retries: 10
  delay: 5

- name: Check AnarchyRun for test-simple-1-fail-first-run
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    name: "{{ _run_ref.name }}"
  register: r_get_run
  vars:
    _action: "{{ r_get_action.resources[0] }}"
    _run_ref: "{{ _action.status.runRef }}"
    _run: "{{ r_get_run.resources[0] }}"
  failed_when: >-
    _run.status.result.status | default('') != 'successful'
  until: r_get_run is success
  retries: 20
  delay: 5

- name: Create AnarchyAction to test callback functionality
  kubernetes.core.k8s:
    apply: true
    state: present
    definition:
      apiVersion: anarchy.gpte.redhat.com/v1
      kind: AnarchyAction
      metadata:
        name: test-simple-1-callback-test
        namespace:  "{{ anarchy_namespace }}"
      spec:
        action: callback_test
        callbackToken: c4llb4ckT0k3n
        subjectRef:
          name: test-simple-1

- name: Verify run of AnarchyAction test-simple-1-callback-test
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-callback-test
  register: r_get_action
  vars:
    _action: "{{ r_get_action.resources[0] }}"
  failed_when: >-
    'runRef' not in _action.status | default({})
  until: r_get_action is success
  retries: 10
  delay: 5

- name: Check AnarchyRun for test-simple-1-fail-first-run
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    name: "{{ _run_ref.name }}"
  register: r_get_run
  vars:
    _action: "{{ r_get_action.resources[0] }}"
    _run_ref: "{{ _action.status.runRef }}"
    _run: "{{ r_get_run.resources[0] }}"
  failed_when: >-
    _run.status.result.status | default('') != 'successful'
  until: r_get_run is success
  retries: 20
  delay: 5

- name: Verify run of AnarchyAction test-simple-1-callback-test not yet completed
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-callback-test
  register: r_get_action
  vars:
    _action: "{{ r_get_action.resources[0] }}"
  failed_when: >-
    _action.status.completedTimestamp | default(false)
  until: r_get_action is success
  retries: 10
  delay: 5

- name: Verify AnarchyAction test-simple-1-callback-test still active for AnarchySubject
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1
  register: r_get_subject
  vars:
    _subject: "{{ r_get_subject.resources[0] }}"
  failed_when: >-
    'test-simple-1-callback-test' != _subject.status.activeAction.name | default('')
  until: r_get_subject is success
  retries: 10
  delay: 5

- name: Execute callback for test-simple-1-callback-test in odo
  when: anarchy_odo_pod is defined
  command: >-
    oc exec -n {{ anarchy_odo_pod.metadata.namespace }} {{ anarchy_odo_pod.metadata.name }} --
    curl http://{{ anarchy_odo_pod.metadata.name }}:5000/action/test-simple-1-callback-test
    -X POST
    -H 'Accept: application/json'
    -H 'Authorization: Bearer c4llb4ckT0k3n'
    -H 'Content-Type: application/json'
    --data '{"event":"done"}'

- name: Execute callback for test-simple-1-callback-test
  when: anarchy_odo_pod is not defined
  uri:
    url: "{{ anarchy_simulated_callback_base_url }}/action/test-simple-1-callback-test"
    validate_certs: false
    method: POST
    headers:
      Authorization: 'Bearer c4llb4ckT0k3n'
    body_format: json
    body:
      event: done

- name: Check AnarchyRun for test-simple-1-callback-test done event
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/subject=test-simple-1
    - anarchy.gpte.redhat.com/action=test-simple-1-callback-test
    - anarchy.gpte.redhat.com/event=done
  register: r_get_run
  vars:
    _run: "{{ r_get_run.resources[0] | default({}) }}"
  failed_when: >-
    _run.status.result.status | default('') != 'successful'
  until: r_get_run is success
  retries: 20
  delay: 5

- name: Verify AnarchyAction test-simple-1-callback-test finished
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-callback-test
  register: r_get_action
  vars:
    _action: "{{ r_get_action.resources[0] | default({}) }}"
  failed_when: >-
    '' == _action.status.finishedTimestamp | default('') or
    'successful' != _action.status.state | default('')
  until: r_get_action is success
  retries: 10
  delay: 5

- name: Verify no AnarchyAction active for test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1
  register: r_get_subject
  vars:
    _subject: "{{ r_get_subject.resources[0] | default({}) }}"
  failed_when: >-
    '' != _subject.status.activeAction.name | default('')
  until: r_get_subject is success
  retries: 10
  delay: 5

- name: Create AnarchyAction to test action continuation
  kubernetes.core.k8s:
    apply: true
    state: present
    definition:
      apiVersion: anarchy.gpte.redhat.com/v1
      kind: AnarchyAction
      metadata:
        name: test-simple-1-continuation-test
        namespace:  "{{ anarchy_namespace }}"
      spec:
        action: continuation_test
        subjectRef:
          name: test-simple-1

- name: Check first AnarchyRun for test-simple-1-continuation-test
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace: "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/subject=test-simple-1
    - anarchy.gpte.redhat.com/action=test-simple-1-continuation-test
  register: r_get_run
  vars:
    _run: "{{ r_get_run.resources[0] | default({}) }}"
  failed_when: >-
    _run.status.result.status | default('') != 'successful'
  until: r_get_run is success
  retries: 20
  delay: 5

- name: Pause briefely for AnarchyRun processing
  pause:
    seconds: 2

- name: Check that test-simple-1-continuation-test is not finished
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-continuation-test
  register: r_get_action
  vars:
    _action: "{{ r_get_action.resources[0] | default({}) }}"
  failed_when: >-
    _action.status.finishedTimestamp | default('') != ''
  until: r_get_action is success
  retries: 20
  delay: 5

- name: Pause for second AnarchyRun
  pause:
    seconds: 30

- name: Check that test-simple-1-continuation-test is finished
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    namespace: "{{ anarchy_namespace }}"
    name: test-simple-1-continuation-test
  register: r_get_action
  vars:
    _action: "{{ r_get_action.resources[0] | default({}) }}"
  failed_when: >-
    _action.status.finishedTimestamp | default('') == ''
  until: r_get_action is success
  retries: 20
  delay: 5

- name: Create failure test
  kubernetes.core.k8s:
    apply: true
    state: present
    definition:
      apiVersion: anarchy.gpte.redhat.com/v1
      kind: AnarchyAction
      metadata:
        name: test-simple-1-failure-test
        namespace:  "{{ anarchy_namespace }}"
      spec:
        action: configure
        subjectRef:
          name: test-simple-1
        vars:
          fail_run: true

- name: Wait for AnarchyRun failure
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace:  "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/action=test-simple-1-failure-test
    - anarchy.gpte.redhat.com/runner=failed
    - anarchy.gpte.redhat.com/subject=test-simple-1
  register: r_get_test_simple_1_failure_test_run
  failed_when: r_get_test_simple_1_failure_test_run.resources | default([]) | length != 1
  until: r_get_test_simple_1_failure_test_run is success
  retries: 10
  delay: 5

- name: Verify AnarchySubject status.runStatus and status.runStatusMessage
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    name: test-simple-1
    namespace:  "{{ anarchy_namespace }}"
  register: r_get_test_simple_1
  vars:
    _subject: "{{ r_get_test_simple_1.resources[0] | default({}) }}"
  failed_when: >-
    _subject.status.runStatus | default('') != 'failed' or
    _subject.status.runStatusMessage | default('') != 'Failed run as requested'
  until: r_get_test_simple_1 is success
  retries: 10
  delay: 5

- name: Update test-simple-1
  kubernetes.core.k8s:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    name: test-simple-1
    namespace:  "{{ anarchy_namespace }}"
    definition:
      spec:
        vars:
          a_var_from_subject: 0

- name: Verify update AnarchyRun in queued state
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace:  "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/event=update
    - anarchy.gpte.redhat.com/runner=queued
    - anarchy.gpte.redhat.com/subject=test-simple-1
  register: r_get_test_simple_1_update_run
  failed_when: r_get_test_simple_1_update_run.resources | default([]) | length != 1
  until: r_get_test_simple_1_update_run is success
  retries: 10
  delay: 5

- name: Delete test-simple-1-failure-test AnarchyAction
  kubernetes.core.k8s:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    name: test-simple-1-failure-test
    namespace:  "{{ anarchy_namespace }}"
    state: absent

- name: Verify that update AnarchyRun is now able to run
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace:  "{{ anarchy_namespace }}"
    name: "{{ r_get_test_simple_1_update_run.resources[0].metadata.name }}"
  register: r_get_test_simple_1_update_run_again
  vars:
    _run: "{{ r_get_test_simple_1_update_run_again.resources[0] | default({}) }}"
  failed_when: >-
    _run.metadata.labels['anarchy.gpte.redhat.com/runner'] == 'queued'
  until: r_get_test_simple_1_update_run_again is success
  retries: 40
  delay: 5

- name: Verify all runs successful for test-simple-1
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    namespace:  "{{ anarchy_namespace }}"
    label_selectors:
    - anarchy.gpte.redhat.com/subject=test-simple-1
    - anarchy.gpte.redhat.com/runner!=successful
  register: r_get_test_simple_1_runs
  failed_when: >-
    r_get_test_simple_1_runs.resources | length != 0
  until: r_get_test_simple_1_runs is success
  retries: 20
  delay: 5

- name: Verify that test-simple-1 status has no active runs
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    name: test-simple-1
    namespace:  "{{ anarchy_namespace }}"
  register: r_get_test_simple_1
  vars:
    _subject: "{{ r_get_test_simple_1.resources[0] }}"
  failed_when: _subject.status.runs.active | length != 0
  until: r_get_test_simple_1 is success
  retries: 20
  delay: 5

- when: anarchy_test_delete_subjects | bool
  block:
  - name: Delete AnarchySubject test-simple-1
    kubernetes.core.k8s:
      state: absent
      api_version: anarchy.gpte.redhat.com/v1
      kind: AnarchySubject
      name: test-simple-1
      namespace: "{{ anarchy_namespace }}"

  - name: Verify AnarchySubject delete for test-simple-1
    kubernetes.core.k8s_info:
      api_version: anarchy.gpte.redhat.com/v1
      kind: AnarchySubject
      name: test-simple-1
      namespace: "{{ anarchy_namespace }}"
    register: r_get_test_simple_1_subject
    failed_when: r_get_test_simple_1_subject.resources | default([]) | length != 0
    until: r_get_test_simple_1_subject is success
    retries: 10
    delay: 5
...
