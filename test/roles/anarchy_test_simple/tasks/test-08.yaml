---
#
# Test case:
# - anarchy_schedule_action with cancel other action
#
- name: Create AnarchyGovernor test-simple-08
  kubernetes.core.k8s:
    definition:
      apiVersion: anarchy.gpte.redhat.com/v1
      kind: AnarchyGovernor
      metadata:
        name: test-simple-08
        namespace: "{{ anarchy_namespace }}"
        labels:
          anarchy.gpte.redhat.com/test: simple
      spec:
        actions:
          blue:
            tasks:
            - anarchy_continue_action:
                after: 5s
          green:
            tasks:
            - anarchy_continue_action:
                after: 5s
        subjectEventHandlers:
          update:
            tasks:
            - when: action_name | default('') == 'blue'
              anarchy_schedule_action:
                action: blue
                cancel:
                - green
            - when: action_name | default('') == 'green'
              anarchy_schedule_action:
                action: green
                cancel:
                - blue

- name: Create AnarchySubject test-simple-08-a
  kubernetes.core.k8s:
    definition:
      apiVersion: anarchy.gpte.redhat.com/v1
      kind: AnarchySubject
      metadata:
        name: test-simple-08-a
        namespace: "{{ anarchy_namespace }}"
        labels:
          anarchy.gpte.redhat.com/test: simple
      spec:
        governor: test-simple-08

- name: Update AnarchySubject test-simple-08-a to trigger blue action
  kubernetes.core.k8s:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    name: test-simple-08-a
    namespace: "{{ anarchy_namespace }}"
    definition:
      spec:
        vars:
          action_name: blue

- name: Wait for blue AnarchyAction for test-simple-08-a
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    label_selectors:
    - anarchy.gpte.redhat.com/action = blue
    - anarchy.gpte.redhat.com/governor = test-simple-08
    - anarchy.gpte.redhat.com/subject = test-simple-08-a
    namespace: "{{ anarchy_namespace }}"
  register: get_action
  failed_when: >-
    get_action.resources | default([]) | length != 1
  until: get_action is successful
  retries: 10
  delay: 1

- name: Wait for successful AnarchyRun for blue AnarchyAction
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    label_selectors:
    - anarchy.gpte.redhat.com/action = {{ get_action.resources[0].metadata.name }}
    - anarchy.gpte.redhat.com/governor = test-simple-08
    - anarchy.gpte.redhat.com/runner_state = successful
    - anarchy.gpte.redhat.com/subject = test-simple-08-a
    namespace: "{{ anarchy_namespace }}"
  register: get_run
  failed_when: >-
    get_run.resources | default([]) | length > 0
  until: get_run is successful
  retries: 10
  delay: 1

- name: Update AnarchySubject test-simple-08-a to trigger green action
  kubernetes.core.k8s:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    name: test-simple-08-a
    namespace: "{{ anarchy_namespace }}"
    definition:
      spec:
        vars:
          action_name: green

- name: Wait for blue AnarchyAction for test-simple-08-a to be canceled
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    label_selectors:
    - anarchy.gpte.redhat.com/action = blue
    - anarchy.gpte.redhat.com/governor = test-simple-08
    - anarchy.gpte.redhat.com/subject = test-simple-08-a
    - anarchy.gpte.redhat.com/canceled
    namespace: "{{ anarchy_namespace }}"
  register: get_action
  failed_when: >-
    get_action.resources | default([]) | length != 1
  until: get_action is successful
  retries: 10
  delay: 1

- name: Wait for green AnarchyAction for test-simple-08-a
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyAction
    label_selectors:
    - anarchy.gpte.redhat.com/action = green
    - anarchy.gpte.redhat.com/governor = test-simple-08
    - anarchy.gpte.redhat.com/subject = test-simple-08-a
    namespace: "{{ anarchy_namespace }}"
  register: get_action
  failed_when: >-
    get_action.resources | default([]) | length != 1
  until: get_action is successful
  retries: 10
  delay: 1

- name: Wait for successful AnarchyRun for green AnarchyAction
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchyRun
    label_selectors:
    - anarchy.gpte.redhat.com/action = {{ get_action.resources[0].metadata.name }}
    - anarchy.gpte.redhat.com/governor = test-simple-08
    - anarchy.gpte.redhat.com/runner_state = successful
    - anarchy.gpte.redhat.com/subject = test-simple-08-a
    namespace: "{{ anarchy_namespace }}"
  register: get_run
  failed_when: >-
    get_run.resources | default([]) | length > 0
  until: get_run is successful
  retries: 10
  delay: 1

- name: Delete AnarchySubject test-simple-08-a
  kubernetes.core.k8s:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    name: test-simple-08-a
    namespace: "{{ anarchy_namespace }}"
    state: absent

- name: Wait for AnarchySubject for test-simple-08-a to complete deletion
  kubernetes.core.k8s_info:
    api_version: anarchy.gpte.redhat.com/v1
    kind: AnarchySubject
    name: test-simple-08-a
    namespace: "{{ anarchy_namespace }}"
  register: get_subject
  failed_when: >-
    get_subject.resources | default([]) | length != 0
  until: get_subject is successful
  retries: 10
  delay: 1
...
